version: '3.8'

services:
  zookeeper:
    image: zookeeper:3.7.0
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOO_MY_ID: 1
      ZOO_SERVERS: server.1=zookeeper:2888:3888;2181

  kafka:
    image: confluentinc/cp-kafka:7.0.1
    container_name: kafka
    ports:
      - "9092:9092"
      - "9999:9999"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_JMX_OPTS: "-Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false -Dcom.sun.management.jmxremote.local.only=false -Dcom.sun.management.jmxremote.rmi.port=9999"
    depends_on:
      - zookeeper

#  prometheus:
#    image: prom/prometheus:latest
#    container_name: prometheus
#    ports:
#      - "9090:9090"
#    volumes:
#      - ./prometheus.yaml:/etc/prometheus/prometheus.yaml
#    command:
#      - '--config.file=/etc/prometheus/prometheus.yaml'
#
#  grafana:
#    image: grafana/grafana:latest
#    container_name: grafana
#    ports:
#      - "3000:3000"
#    environment:
#      GF_SECURITY_ADMIN_USER: admin
#      GF_SECURITY_ADMIN_PASSWORD: adminpassword
#    volumes:
#      - grafana-data:/var/lib/grafana
#    depends_on:
#      - prometheus
#
#  conduktor:
#    image: conduktor/conduktor-platform:latest
#    container_name: conduktor
#    ports:
#      - "8080:8080"
#      - "9095:9095"
#    environment:
#      KAFKA_BOOTSTRAP_SERVER: kafka:9092
#      CONDUKTOR_BACKEND_PORT: 9095
#      CDK_DATABASE_URL: "postgresql://admin:adminpassword@postgres:5432/meteo-db"
#    depends_on:
#      - kafka
#      - postgres

volumes:
  grafana-data:
