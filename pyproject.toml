[project]
name = "data-stack"
version = "0.1.0"
description = "Add your description here"
readme = "README.md"
requires-python = ">=3.13"
dependencies = [
]

[tool.uv.workspace]
members = [
    "projects/*",
    "adapters/*",
    "connectors/*",
]

[tool.uv.sources]
# projects
event-mock = { workspace = true }
meteo-app = { workspace = true }
meteo-backend = { workspace = true }

# domain
meteo-domain = { workspace = true }

# adapters
geopy-location-api = { workspace = true }
influxdb-measure-repository = { workspace = true }
kafka-message-queue = { workspace = true }
openmeteo-measure-repository = { workspace = true }
posix-file-repository = { workspace = true }
posix-measure-repository = { workspace = true }
redis-message-queue = { workspace = true }
s3-file-repository = { workspace = true }
sql-meteo-adapters = { workspace = true }
xarray-datafile-api = { workspace = true }

# connectors
influxdb-connector = { workspace = true }
kafka-connector = { workspace = true }
redis-connector = { workspace = true }
s3-connector = { workspace = true }
sql-connector = { workspace = true }

[tool.ruff]
# Règles à activer
lint.select = ["E", "F", "B", "I", "N", "UP", "PL"]  # PL active les règles équivalentes à Pylint

# Ignore les erreurs d'importation pour les packages spécifiques
lint.extend-ignore = []

# Chemins à ignorer
exclude = [
    ".git",
    ".ruff_cache",
    "__pycache__",
]

[tool.pylint.'MESSAGES CONTROL']
disable = [
    "C0114", # missing-module-docstring
    "C0115", # missing-class-docstring
    "C0116", # missing-function-docstring
    "c-extension-no-member",
]

[tool.pylint."DESIGN"]
min-public-methods = 1

[dependency-groups]
dev = [
    "black>=25.1.0",
    "coverage>=7.8.0",
    "flake8>=7.2.0",
    "isort>=6.0.1",
    "pdoc>=15.0.3",
    "pre-commit>=4.2.0",
    "pycrunch-engine>=1.6.4",
    "pydeps>=3.0.1",
    "pylint>=3.3.6",
    "pytest>=8.3.5",
    "pytest-asyncio>=0.26.0",
    "radon>=6.0.1",
    "ruff>=0.11.8",
]
